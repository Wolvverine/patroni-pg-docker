name: Build Docker images and push to ghcr.io

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:
    branches:
    - main

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
        distro: [trixie,alpine]
        pg_version: ["17.6","18.0"]
        patroni_version: ["4.0.6"]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.11.1
    
    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3.5.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5.8.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    
    - name: Build and push Docker image for platform ${{ matrix.platform }} Distribution ${{ matrix.distro }} PostgreSQL ${{ matrix.pg_version }} Patroni ${{ matrix.patroni_version }}
      id: build-and-push
      uses: docker/build-push-action@v6.18.0
      with:
        context: .
        file: Dockerfile
        build-args: |
          DISTRO=${{ matrix.distro }}
          PG_VERSION=${{ matrix.pg_version }}
          PATRONI_VERSION=${{ matrix.patroni_version }}
        platforms: ${{ matrix.platform }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}-${{ matrix.pg_version }}-${{ matrix.patroni_version }}-${{ matrix.distro }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Test Docker image platform ${{ matrix.platform }} Distribution ${{ matrix.distro }} PostgreSQL ${{ matrix.pg_version }} Patroni ${{ matrix.patroni_version }}
      if: github.event_name == 'pull_request'
      run: |
        docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.tags[0] }}-${{ matrix.pg_version }}-${{ matrix.patroni_version }}-${{ matrix.distro }} patroni --version